/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/css/style.css":
/*!***************************!*\
  !*** ./src/css/style.css ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ "./src/js/modal.js":
/*!*************************!*\
  !*** ./src/js/modal.js ***!
  \*************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
class Modal {
    constructor(modalTitle) {
        this.modalTitle = modalTitle;
        this.errorShown = false;
        
    }
    close() {
        this.modal.style.display = 'none'
    }

    show() {
        this.modal.style.display = 'flex'

    }
    showError(message) {
        const errorMsg = this.modal.querySelector('.error-message');
        errorMsg.textContent = message;
        errorMsg.style.display = 'flex';
        this.errorShown = true;


    }
    hideError() {
        const errorMsg = this.modal.querySelector('.error-message');
        errorMsg.style.display = 'none';
        this.errorShown = false;

    }

    render(content) {

        this.modal = document.createElement('div');
        this.modal.classList.add('modal');
        this.modal.innerHTML = `
            <div class="modal-wrapper">
                <span class="close-modal-btn">&times;</span>
            <div class='modal-header'>
                <h2>${this.modalTitle}</h2>
            </div>
            <div class='modal-body'>
            ${content}
            
            </div>
            </div>
   
        `

        document.body.append(this.modal)

        this.errorMsg = this.modal.querySelector('.error-message');


        const closeModalBtn = this.modal.querySelector('.close-modal-btn');
        const modalWrapper = this.modal;

        closeModalBtn.addEventListener('click', () => {
            this.close();
        });

        modalWrapper.addEventListener('click', (event) => {
            if (event.target === modalWrapper) {
                this.close();
            }
        });

        return this.modal;
    }
}


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Modal);

/***/ }),

/***/ "./src/js/visit.js":
/*!*************************!*\
  !*** ./src/js/visit.js ***!
  \*************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Visit)
/* harmony export */ });
class Visit {
    constructor(fullName, doctorsName, id, details) {
        this.fullName=fullName;
        this.doctorsName = doctorsName;
        this.id = id;
        this.details = details;
    }
    render() {
        this.visitItem = document.createElement('div')
        this.visitItem.classList.add('item');
        this.visitItem.innerHTML=`
            <span class="close-item-btn">&times;</span>
            <h5 class="user-info item-description">Patient's Name: ${this.fullName}</h5>
            <h5 class="doctor-info item-description">Doctor's Name: ${this.doctorsName}</h5>
            <button class="edit-btn item-button">Edit</button>
            <button class="show-more-btn item-button">Show More</button>
        `
        
        return this.visitItem
    }
}

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.
(() => {
/*!*************************!*\
  !*** ./src/js/index.js ***!
  \*************************/
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _modal_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modal.js */ "./src/js/modal.js");
/* harmony import */ var _visit_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./visit.js */ "./src/js/visit.js");
/* harmony import */ var _css_style_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../css/style.css */ "./src/css/style.css");
// your@email.com password ---> with data
// fisojej763@iturchia.com 123server ---> without data




// import CreateVisit from './createVisit.js';

const loginBtn = document.querySelector('.btn-login');
let loginModal = null;

document.addEventListener('DOMContentLoaded', handleLogin);


loginBtn.addEventListener('click', function () {
    console.log('clicked')
    if (!loginModal) {
        const content = `
        <input type="email" id="email" placeholder="Email" class="modal-input">
        <input type="password" id="password" placeholder="Password" class="modal-input">
        <span class="error-message"></span>
        <button class="modal-submit-btn">Login</button>`

        loginModal = new _modal_js__WEBPACK_IMPORTED_MODULE_0__["default"]('Login Modal');
        loginModal.render(content);
        checkFields(loginModal);
    } else {
        loginModal.show();
    }

})


async function login(userData, loginModal) {
    try {
        const response = await fetch("https://ajax.test-danit.com/api/v2/cards/login", {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ email: userData.userEmail, password: userData.userPassword })
        });

        if (response.ok) {
            const token = await response.text();
            console.log('Token:', token);
            localStorage.setItem('token', token)
            localStorage.setItem('loggedIn', 'true')
            handleLogin();

            loginModal.close();

        } else {
            loginModal.showError('Incorrect username or password')
        }
    } catch (error) {
        console.error('Error:', error);
    }
}


function checkFields(loginModal) {
    const modalSubmitBtn = document.querySelector('.modal-submit-btn');


    modalSubmitBtn.addEventListener('click', function () {
        const userEmail = document.querySelector('#email').value;
        const userPassword = document.querySelector('#password').value;
        const userData = { userEmail, userPassword };

        if (userEmail == '' || userPassword == '') {
            loginModal.showError('Please fill all the fields');
            return
        }

        else {
            loginModal.hideError()
            login(userData, loginModal)
        }
    })
}


async function displayCards() {
    const filterForm = document.querySelector('.form__wrapper');
    filterForm.style.display = 'block';
    try {
        const data = await fetchCards();
        const visitsWrapper = document.querySelector('.visits');
        if (data.length === 0) {
            const noItemMsg = document.querySelector('.no-items-message');
            noItemMsg.style.display = 'block'
        }
        const visits = data.map((visit) => {
            const newVisit = new _visit_js__WEBPACK_IMPORTED_MODULE_1__["default"](visit.fullname, visit.target, visit.id, visit.description);
            return newVisit
        })
        console.log(data)

        visits.forEach((newVisit) => {
            visitsWrapper.appendChild(newVisit.render());
        });

        return visits;
    } catch (error) {
        console.error(error);
    }


}

function handleLogin() {
    const isLoggedIn = localStorage.getItem('loggedIn');
    if (isLoggedIn === 'true') {

        const loginBtn = document.querySelector('.btn-login');
        const createVisitBtn = document.querySelector('.btn-create-visit');

        loginBtn.style.display = 'none';
        createVisitBtn.style.display = 'block';

        displayCards();


    } else {
        const loginBtn = document.querySelector('.btn-login');
        loginBtn.style.display = 'block';
    }

}

async function fetchCards() {
    try {
        const response = await fetch("https://ajax.test-danit.com/api/v2/cards", {
            method: 'GET',
            headers: {
                'Content-Type': 'application/json',
                Authorization: `Bearer ${localStorage.getItem("token")}`,
            }
        })
        const data = await response.json()
        return data

    } catch (error) {
        console.error(error)
    }
}



// Create Visit section

// const createVisitBtn = document.querySelector('.btn-create-visit');
// createVisitBtn.addEventListener('click', createVisit)

// let currentVisit = null;

// function createVisit() {
//     if (!currentVisit) {
//         const visit = new CreateVisit(currentVisit)
//         visit.render()
//         currentVisit = visit;
//     }
// }
})();

/******/ })()
;